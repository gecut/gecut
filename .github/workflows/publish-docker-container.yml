# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish Alwatr Containers

on:
  workflow_dispatch:

  push:
    tags:
      - 'v*.*.*'
    branches:
      - next
      - main

  pull_request:
    paths:
      - 'cloud/**/*/Dockerfile'
      - '.github/workflows/publish-docker-container.yml'

env:
  REGISTRY: ghcr.io
  USERNAME: ${{ github.repository_owner }}
  LIARA_TOKEN: ${{ secrets.LIARA_API_TOKEN }}

jobs:
  build:
    name: Build Container
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - image: hami-pwa
            source: apps/hami-pwa
            distribution: dist/apps/hami-pwa
            dockerfile: cloud/pwa/Dockerfile
            description: Hami Project Progressive Web Application
            liara_deploy: true

          - image: hami-api
            source: apps/hami-api
            distribution: dist/apps/hami-api
            dockerfile: cloud/api/Dockerfile
            description: Hami Project API Server
            liara_deploy: true

          # - image: survey-pwa
          #   source: apps/survey-pwa
          #   distribution: dist/apps/survey-pwa
          #   dockerfile: cloud/pwa/Dockerfile
          #   description: Survey Progressive Web Application

          - image: storage-server
            source: apps/services/storage-server
            distribution: dist/apps/services/storage-server
            dockerfile: cloud/api/Dockerfile
            description: Storage Server Micro-service
            liara_deploy: true

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: ‚§µÔ∏è Checkout repository
        uses: actions/checkout@v3.5.2

      - name: üèó Setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn

      - name: üèó Install dependencies
        run: yarn install --frozen-lockfile

      - name: üöÄ Build `${{ matrix.image }}` Projects
        run: yarn nx run ${{ matrix.image }}:build

      - name: üèó Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.7.0

      - name: üèó Log into registry ${{ env.REGISTRY }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üèó Extract metadata
        id: meta
        uses: docker/metadata-action@v4.6.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: name=${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ matrix.image }},enable=true

          labels: |
            org.opencontainers.image.authors=MM25Zamanian@gmail.com
            org.opencontainers.image.title=@gecut/${{ matrix.image }}
            org.opencontainers.image.description=${{ matrix.description }}
            org.opencontainers.image.distribution = "https://github.com/gecut/gecut"

          tags: |
            type=semver,enable=true,pattern={{major}}
            type=semver,enable=true,pattern={{major}}.{{minor}}
            type=semver,enable=true,pattern={{version}}
            type=ref,enable=true,event=pr
            type=ref,enable=true,event=branch

      - name: üöÄ Build and push container image
        id: build-and-push
        uses: docker/build-push-action@v4.1.1
        with:
          push: ${{ github.event_name != 'pull_request' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: .
          file: ${{ matrix.dockerfile }}
          build-args: |
            PACKAGE_SOURCE=${{ matrix.distribution }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üöÄ Deploy On Lira
        if: ${{ matrix.liara_deploy == true }}
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 3
          max_attempts: 10
          command: |
            cd ${{ matrix.source }}
            npx @liara/cli deploy --api-token="${{ env.LIARA_TOKEN }}" --detach
